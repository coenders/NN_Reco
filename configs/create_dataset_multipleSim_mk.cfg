[Basics]
# number of files to shuffle 
amountoffiles = 3
LengthFilelist = 5
#If set to True only frames with neutrinos as primaries are selected
onlyneutrinoasprimary = True
# number of MC-paths given, need to match the number of files to be shuffled, needs to start with 0
MC_path0 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11477/00000-00999/clsim-base-4.0.3.0.99_eff/
MC_path1 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11981/00000-00999/clsim-base-4.0.3.0.99_eff/
MC_path2 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11374/00000-00999/clsim-base-4.0.3.0.99_eff/
geometry_file = /data/sim/sim-new/downloads/GCD/GeoCalibDetectorStatus_2012.56063_V0.i3.gz
out_folder = /data/user/mkronmueller/data/run01
output_file = neutrinos_of_3_types_001
dagman_folder = /data/user/mkronmueller/data/run01/dagman
input_shape = auto
PulseSeriesMap = InIceDSTPulses
## give a comma seperated list of foldes in MC_path to be processed, if 'allinmcpath' use all folders
folder_list = allinmcpath  
## give a comma seperated list of files to search for in subfolders of MC_path. If 'allinfolder' use all files.
### use standart unix syntax for using files matching a special regular expression, e.g. *numu*
file_list = allinfolder


### Define Input Variables Below
[ow]
variable = ['I3MCWeightDict']['OneWeight']
out_type = float64

[depositedE]
function = calc_depositedE(x)
out_type = float64

[firstParticle]
variable = ['I3MCTree'][0].pdg_encoding
out_type = float64

[classificationTag]
function = classificationTag(x)
out_type = float64

[energyFirstParticle]
variable = ['I3MCTree'][0].energy
out_type = float64

